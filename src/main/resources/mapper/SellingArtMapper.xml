<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lnsf.dao.SellingArtMapper" >
  <resultMap id="BaseResultMap" type="com.lnsf.entities.SellingArt" >
    <id column="Aid" property="aid" jdbcType="INTEGER" />
    <result column="aname" property="aname" jdbcType="VARCHAR" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="describe" property="describe" jdbcType="VARCHAR" />
    <result column="sphoto" property="sphoto" jdbcType="INTEGER" />
    <result column="inprice" property="inprice" jdbcType="DOUBLE" />
    <result column="sellprice" property="sellprice" jdbcType="DOUBLE" />
    <result column="salesvolume" property="salesvolume" jdbcType="INTEGER" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Aid, aname, uid, describe, sphoto, inprice, sellprice, salesvolume, stock, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lnsf.entities.SellingArtExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sellingart
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sellingart
    where Aid = #{aid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sellingart
    where Aid = #{aid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lnsf.entities.SellingArtExample" >
    delete from sellingart
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lnsf.entities.SellingArt" >
    insert into sellingart (Aid, aname, uid, 
      describe, sphoto, inprice, 
      sellprice, salesvolume, stock, 
      status)
    values (#{aid,jdbcType=INTEGER}, #{aname,jdbcType=VARCHAR}, #{uid,jdbcType=INTEGER}, 
      #{describe,jdbcType=VARCHAR}, #{sphoto,jdbcType=INTEGER}, #{inprice,jdbcType=DOUBLE}, 
      #{sellprice,jdbcType=DOUBLE}, #{salesvolume,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lnsf.entities.SellingArt" >
    insert into sellingart
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="aid != null" >
        Aid,
      </if>
      <if test="aname != null" >
        aname,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="describe != null" >
        describe,
      </if>
      <if test="sphoto != null" >
        sphoto,
      </if>
      <if test="inprice != null" >
        inprice,
      </if>
      <if test="sellprice != null" >
        sellprice,
      </if>
      <if test="salesvolume != null" >
        salesvolume,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="aid != null" >
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="aname != null" >
        #{aname,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="describe != null" >
        #{describe,jdbcType=VARCHAR},
      </if>
      <if test="sphoto != null" >
        #{sphoto,jdbcType=INTEGER},
      </if>
      <if test="inprice != null" >
        #{inprice,jdbcType=DOUBLE},
      </if>
      <if test="sellprice != null" >
        #{sellprice,jdbcType=DOUBLE},
      </if>
      <if test="salesvolume != null" >
        #{salesvolume,jdbcType=INTEGER},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lnsf.entities.SellingArtExample" resultType="java.lang.Integer" >
    select count(*) from sellingart
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sellingart
    <set >
      <if test="record.aid != null" >
        Aid = #{record.aid,jdbcType=INTEGER},
      </if>
      <if test="record.aname != null" >
        aname = #{record.aname,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.describe != null" >
        describe = #{record.describe,jdbcType=VARCHAR},
      </if>
      <if test="record.sphoto != null" >
        sphoto = #{record.sphoto,jdbcType=INTEGER},
      </if>
      <if test="record.inprice != null" >
        inprice = #{record.inprice,jdbcType=DOUBLE},
      </if>
      <if test="record.sellprice != null" >
        sellprice = #{record.sellprice,jdbcType=DOUBLE},
      </if>
      <if test="record.salesvolume != null" >
        salesvolume = #{record.salesvolume,jdbcType=INTEGER},
      </if>
      <if test="record.stock != null" >
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sellingart
    set Aid = #{record.aid,jdbcType=INTEGER},
      aname = #{record.aname,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=INTEGER},
      describe = #{record.describe,jdbcType=VARCHAR},
      sphoto = #{record.sphoto,jdbcType=INTEGER},
      inprice = #{record.inprice,jdbcType=DOUBLE},
      sellprice = #{record.sellprice,jdbcType=DOUBLE},
      salesvolume = #{record.salesvolume,jdbcType=INTEGER},
      stock = #{record.stock,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lnsf.entities.SellingArt" >
    update sellingart
    <set >
      <if test="aname != null" >
        aname = #{aname,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="describe != null" >
        describe = #{describe,jdbcType=VARCHAR},
      </if>
      <if test="sphoto != null" >
        sphoto = #{sphoto,jdbcType=INTEGER},
      </if>
      <if test="inprice != null" >
        inprice = #{inprice,jdbcType=DOUBLE},
      </if>
      <if test="sellprice != null" >
        sellprice = #{sellprice,jdbcType=DOUBLE},
      </if>
      <if test="salesvolume != null" >
        salesvolume = #{salesvolume,jdbcType=INTEGER},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where Aid = #{aid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lnsf.entities.SellingArt" >
    update sellingart
    set aname = #{aname,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=INTEGER},
      describe = #{describe,jdbcType=VARCHAR},
      sphoto = #{sphoto,jdbcType=INTEGER},
      inprice = #{inprice,jdbcType=DOUBLE},
      sellprice = #{sellprice,jdbcType=DOUBLE},
      salesvolume = #{salesvolume,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where Aid = #{aid,jdbcType=INTEGER}
  </update>
</mapper>